#include<bits/stdc++.h>
using namespace std;
long long int comparisons=0;
void MaxHeapify(int arr[],int i,int size)
{
	int l,r,largest;
	l=2*i+1; 
	r=2*i+2;
	if(l<size && ++comparisons && arr[l]>arr[i])
		largest=l;
	else
		largest=i;
	if(r<size && ++comparisons && arr[r]>arr[largest])
		largest=r;
	if(largest!=i)
	{
		swap(arr[i],arr[largest]);
		MaxHeapify(arr,largest,size);
	}
}

void BuildMaxHeap(int arr[],int size)
{
	for(int i=(size/2)-1; i>=0; i--) 
	{
		MaxHeapify(arr,i,size);
	}
	
} 

void HeapSort(int arr[],int size)
{
	BuildMaxHeap(arr,size); 
	for(int i=size-1; i>0; i--)
	{
		swap(arr[0],arr[i]);
		MaxHeapify(arr,0,i);
	}
	
	/*for (int i=0; i<size; ++i) 
        cout << arr[i] << " "; 
    cout << "\n";*/
    
}

int main()
{
	int size,n;
	cout<<"Enter size of data set:"<<endl;
	cin>>size;
	
	ofstream ofs("heapsort.csv");
	if(ofs.is_open())
	{
		for(int i=1;i<=size;i++)
		{
			n=rand() % size+1;
			ofs<<n;
			ofs<<endl;
		}
		ofs.close();
	}
	else
		cout<<"Unable to open file\n";
	
	ifstream ifs("heapsort.csv");
	//ifstream ifs("DataI.csv");
	//ifstream ifs("DataD.csv");
	int arr[size];
	int index=0;
	while(!ifs.eof() && index<size)
	{
		ifs >> arr[index++];
		
	}
	
	for (int i=0; i<size; ++i) 
        cout << arr[i] << " "; 
    cout << "\n";
    
	auto start=std::chrono::system_clock::now();
	HeapSort(arr,size);
	auto end=std::chrono::system_clock::now();
	chrono::duration<double>diff=end-start;
	for (int i=0; i<size; ++i) 
        cout << arr[i] << " "; 
    cout << "\n";
	
	cout<<"Time: "<<diff.count()<<'\n';
	cout<<"\nNumber of comparisons: "<<comparisons; 
     
	ofstream myfile("resultHS.csv",ios::app);
	//ofstream myfile("HSortIC.csv",ios::app);
	//ofstream myfile("HSortDC.csv",ios::app);
	if(myfile.is_open())
	{
		//myfile<<"Data Set\t\tTime\t\tComparisons"<<endl;
		myfile<<size<<","<<diff.count()<<","<<comparisons<<"\n";
		myfile.close();
	}
	else
		cout<<"Unable to open file\n";
	return 0;
}

#include<bits/stdc++.h>
using namespace std;
int main()
{
	ofstream myfile("DataI.csv",ios::app);
		for(int i=1;i<=500000;i++)
		{
			myfile<<i<< endl;
		}
}
