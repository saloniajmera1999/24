#include<bits/stdc++.h>
using namespace std;
long long int comparisons=0;

int findMax(int arr[],int num)
{
	int max=INT_MIN;      //-infinity
	for(int i=0;i<num;i++)
	{
		comparisons++;
		if(arr[i]>max)
		max=arr[i];
	}
	return max;
}
void countSort(int arr[],int num) 
{ 
    int range = findMax(arr,num);
    int count[range+1], output[num];
	for(int i=0; i<=range; i++)
		count[i]=0;
    for(int i=0; i<num; i++) 
    {
	    count[arr[i]]++;
     }
    for(int i=1; i<=range; i++) 
        count[i]+= count[i-1];  
    for(int i=0; i<num; i++) 
    { 
        output[count[arr[i]]-1] = arr[i]; 
        --count[arr[i]]; 
    
    } 
    for(int p=0; p<num; p++)
    {
    	arr[p]=output[p];
	}
} 
  
void printArray(int arr[], int num) 
{  
    for(int i=0; i<num; i++)  
        cout << arr[i] << " ";  
    cout << "\n";  
} 

int main()
{
	int num,n;
	cout<<"Enter range of data set:"<<endl;
	cin>>num;
	
	ofstream ofs("countsort.csv");
	if(ofs.is_open())
	{
		for(int i=1;i<=num;i++)
		{
			n=rand() % num+1;
			ofs<<n;
			ofs<<endl;
		}
		ofs.close();
	}
	else
		cout<<"Unable to open file\n";
	
	ifstream ifs("countsort.csv");
	int arr[num];
	int index=0;
	while(!ifs.eof() && index<num)
	{
		ifs >> arr[index++];	
	}
	printArray (arr,num); 

	auto start=std::chrono::system_clock::now();
	countSort(arr,num);
	auto end=std::chrono::system_clock::now();
	chrono::duration<double>diff=end-start;
	
	cout<<"Time: "<<diff.count();
	cout<<"\nNumber of comparisons: "<<comparisons<<'\n'; 
	ofstream myfile("resultCS.csv",ios::app);
	if(myfile.is_open())
	{
		myfile<<num<<","<<diff.count()<<","<<comparisons<<"\n";
		myfile.close();
	}
	else
		cout<<"Unable to open file\n";
	printArray (arr,num); 
    return 0; 	
}
